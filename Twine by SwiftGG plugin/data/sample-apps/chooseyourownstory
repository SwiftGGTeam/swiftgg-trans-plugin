{"Choose Your Own Story": {"zh": "选择你自己的故事", "tips": ""}, "Provide dynamic navigation between views.": {"zh": "提供视图间的动态导航。", "tips": ""}, "In this sample, you can write a story with many different paths and outcomes. Your reader can make choices at important points in the narrative, resulting in different experiences based on their responses.": {"zh": "在这个示例中，你可以写一段包括多种路径和结果的故事。你的读者可以在关键点处选择，结果会影响故事的不同体验。", "tips": ""}, "There are several parts to this app. StoryData contains the story itself, including the text on each page and the choices the reader can make.": {"zh": "这个应用程序有几个部分。 StoryData 包含故事本身，包括每页故事描述文本和读者可以选择的选项。", "tips": ""}, "StoryView sets up the navigation for the app, and StoryPageView displays the contents of one page of the story.": {"zh": "StoryView 设置导航，并使用 StoryPageView 展示故事的内容。", "tips": ""}, "You can start in StoryData and write your own narrative, or you can learn about and modify the look and feel of the app in StoryView and StoryPageView.": {"zh": "你可以从 StoryData 开始，写你自己的故事，或者你可以在 StoryView 和 StoryPageView 中了解学习和修改应用程序的外观和风格。", "tips": ""}, "Create Your Own Story": {"zh": "创造你自己的故事", "tips": ""}, "Customize the story to create a narrative of your own.": {"zh": "自定义故事内容来创建自己的叙事。", "tips": ""}, "Step 1": {"zh": "第一步", "tips": ""}, "To construct your narrative, the app needs an instance of Story, which takes an array of StoryPage instances. Each page of your story contains some narrative text and an array of choices to select from. That choice takes you to another story page with more choices that take you to another story page, and so on.": {"zh": "为了构建故事，应用程序需要一个 Story 实例，它包括一个 StoryPage 数组。每个页面的故事包含故事文本和选项，选项会导向另一个故事页面，以此类推。", "tips": ""}, "Step 2": {"zh": "第二步", "tips": ""}, "Here’s the text of your first story page. Try changing it to something new, and notice how the app preview changes. When you’re ready, you can edit this text to start creating your story.": {"zh": "这是第一个故事页面的文本。试着改变它，并注意，应用程序预览会改变。当你准备好时，编辑文本来开始创建故事。", "tips": ""}, "Step 3": {"zh": "第三步", "tips": ""}, "Notice the three quotation marks above and below the text? This is a special way to create a String value. You can read and edit your story much more easily with this special syntax because you can include multiple lines and quotation marks in the text.": {"zh": "注意到文本上下的三个引号了吗？这是一个特殊的方式来创建字符串值。你可以使用这种特殊的语法来编辑故事，用三个引号包住多行文本。", "tips": ""}, "Step 4": {"zh": "第四步", "tips": ""}, "In addition to the intro text, each page offers readers some choices for what happens next in the story. The page displays these choices as buttons below the text.": {"zh": "除了介绍文本之外，每个页面都有读者可以选择的选项。页面将这些选项显示在文本下面。", "tips": ""}, "Experiment": {"zh": "实践", "tips": ""}, "Try customizing the text of each choice to see how the app preview updates the buttons.": {"zh": "尝试自定义每个选项的文本来看应用程序预览如何更新按钮。", "tips": ""}, "Step 5": {"zh": "第五步", "tips": ""}, "The destination property of the choice is the key to story navigation. The number is the index of the page for the app to display when a reader taps to select that choice. Arrays start counting at 0, so the index of the first page is 0, the second page is 1, and so on.": {"zh": "选择的 destination 属性是故事导航的关键。数字是应用程序显示的页面的索引。数组计数从 0 开始，所以第一个页面的索引是 0，第二个页面是 1。以此类推。", "tips": ""}, "Step 6": {"zh": "第六步", "tips": ""}, "Try changing the destination of one of these choices and then test where the button navigates to in the app preview. Be careful, though. You have 21 story pages, so using an index higher than 20 causes the app to crash due to an index out of range error.": {"zh": "尝试修改其中一个选项的目标，然后测试在应用程序预览中按钮导航的页面。不过要注意，我们有 21 个故事页面，因此使用一个大于 20 的索引可能会导致应用程序崩溃。", "tips": ""}, "Step 7": {"zh": "第七步", "tips": ""}, "To add a new page to the story, copy an existing story page, such as this one, and paste it below the last story page in the array.": {"zh": "要给故事添加新页面，复制一个现有故事页面，并将其放在故事数组的最后一个页面之后。", "tips": ""}, "Try adding a new page and customizing its text and choices. You’re now ready to start writing the adventure!": {"zh": "尝试添加一个新页面并自定义它的文本和选项。你现在已经可以开始写故事了!", "tips": ""}, "Story Data Model": {"zh": "故事数据模型", "tips": ""}, "Learn how to structure the story data for your reader’s adventure.": {"zh": "了解如何为读者的故事构建数据。", "tips": ""}, "You’ll use the custom types defined here to model the story data. Your app uses an instance of the Story type to display a series of story pages, each with some narrative text and a number of choices for the reader.": {"zh": "你将使用这里的自定义类型来对故事数据进行建模。您的应用程序使用 Story 类来显示故事页面，每个页面都有故事文本和读者可以选择的选项。", "tips": ""}, "The pages property holds an array of StoryPage values, each corresponding to a page of your story.": {"zh": "pages 属性包含一个 StoryPage 数组，每个数组元素对应一个故事页面。", "tips": ""}, "The StoryPage type contains a text value for the narrative text on the page, and a choices array that contains an array of StoryChoice options that a reader can choose from to navigate to another page.": {"zh": "StroyPage 类包含故事文本的值，以及一个选项数组，读者可以选择来导航到另一个页面。", "tips": ""}, "The Choice type defines a choice readers can make while reading a story.": {"zh": "Choice 类定义读者可以在故事中选择的选项。", "tips": ""}, "The text property holds a String that describes the choice readers can make.": {"zh": "text 属性包含一个字符串描述读者可以选择的选项。", "tips": ""}, "The destination property stores an Int. The value is the index of the page that the choice navigates to.": {"zh": "destination 属性存储一个整数。这个值是选项导航到故事页面的索引。", "tips": ""}, "Creating a Navigation View": {"zh": "创建一个导航视图", "tips": ""}, "To manage navigation through the story, the app wraps each story page in a NavigationStack.": {"zh": "为了管理故事中的导航，应用程序将每个故事页面包装在 NavigationStack 中。", "tips": ""}, "StoryView is the top-level view of your app. When your app runs, this is the first view it displays.": {"zh": "StoryView 是应用程序的顶级视图。当应用程序运行时，他是第一个显示的视图。", "tips": ""}, "To display and navigate between each story page, you’ll use a NavigationStack. This view acts as a container to display one StoryPageView at a time and transition to the next view when the reader taps a NavigationLink.": {"zh": "要显示和导航每个故事页面，你将使用 NavigationStack。将它作为容器一次显示一个 StoryPageView，当读者点击 NavigationLink 时，它会显示下一个视图。", "tips": ""}, "The navigation view displays StoryPageView as its content. Notice that you initialize this view with the global variable story from the StoryData file, and you show the first page, with an index of 0.": {"zh": "导航视图显示 StoryPageView 作为其内容。要注意，你使用 StoryData 文件中的全局变量初始化这个视图，并显示第一个页面，索引为 0。", "tips": ""}, "Displaying a Story Page": {"zh": "显示故事页面", "tips": ""}, "Explore and modify the story’s user interface (UI) using basic SwiftUI views.": {"zh": "使用基本 SwiftUI 视图探索和修改故事的用户界面(UI)。", "tips": ""}, "StoryPageView displays your story so readers can navigate by making choices provided on each page.": {"zh": "StoryPageView 展示故事，读者可以通过提供的选项来导航。", "tips": ""}, "To display a story, the app uses an instance of the Story type that contains all of the story’s data. To change this data, go to the StoryData.swift file and look for the global variable story.": {"zh": "为了显示故事，应用程序使用 Story 类中包含故事数据的实例。要改变故事数据，请查看 StoryData.swift 文件并在其中找到全局变量 story。", "tips": ""}, "This property stores the index of the current story page.": {"zh": "这个属性存储当前故事页面的索引。", "tips": ""}, "A VStack arranges content vertically onscreen. At the top is the text of the current page, and at the bottom are the choices the reader can make on the page. When the reader taps to select a choice, the app navigates to another page.": {"zh": "VStack 在屏幕上垂直排列内容。在顶部是当前页面的文本，在底部是读者可以选择的选项。当读者选择选项时，应用程序导航到另一个页面。", "tips": ""}, "The ScrollView lets you display content that’s bigger than the screen. Because a story page might have a lot of text, you want the reader to be able to scroll through it.": {"zh": "ScrollView 使读者能够在屏幕上滚动。因为故事页面可能会有很多文本，你希望读者能够滚动浏览它。", "tips": ""}, "The Text view displays the story text from the current page.": {"zh": "文本视图显示当前页面的故事文本。", "tips": ""}, "The ForEach structure generates views for a collection of things. In this case, the collection is the choices array of the current page in the story. The code within the braces runs once for each choice.": {"zh": "ForEach 结构生成集合视图，在这个例子中，集合是当前页面的选项数组，大括号内的代码针对每个选项运行一次。", "tips": ""}, "Note": {"zh": "注意", "tips": ""}, "SwiftUI uses the id argument to tell the choices apart from each other. Because each choice has different text, you can use the text property to identify them.": {"zh": "SwiftUI 使用 id 参数来区分选项。因为每个选项有不同的文本，你可以使用 text 属性来区分它们。", "tips": ""}, "Step 8": {"zh": "第八步", "tips": ""}, "The ForEach view passes each item of the choices collection into its body. You can use the choice to create a NavigationLink.": {"zh": "ForEach 视图传递每个选项到 body 中。你可以使用选项创建 NavigationLink。", "tips": ""}, "A NavigationLink needs two things: a destination and content to display. The destination of the navigation link is the page that the choice navigates to.": {"zh": "NavigationLink 需要两个东西：目的地和要显示的内容。导航链接的目的地是选项导航到的页面。", "tips": ""}, "Step 9": {"zh": "第九步", "tips": ""}, "The code between the braces is what the navigation link displays as its content — what the user taps.": {"zh": "大括号内的代码是导航链接显示的内容 — 用户点击的内容。", "tips": ""}, "Navigation links don’t work if they aren’t inside a navigation view (either a NavigationStack or NavigationSplitView), so you’ll notice that the preview for this view won’t let you navigate to the next page. The StoryView creates the navigation view that contains the StoryPageView. Use the app preview, or the preview for the StoryView, to test your story navigation.": {"zh": "如果导航链接不是在一个 NavigationView（如 NavigationStack 或 NavigationSplitView）内，那么它们将不起作用，你可以注意到预览不会导航到下一页。StoryView 创建了 StoryPageView 的导航视图。使用 App 预览，或 StoryView 的预览来测试故事导航。", "tips": ""}, "Step 10": {"zh": "第十步", "tips": ""}, "The most important thing in this label is the Text for displaying the choices. But it’d be nice to match the text alignment with the story page text. To align the text, you’ll use two modifiers: .multilineTextAlignment and frame. Applying the .multilineTextAlignment modifier to the Text view aligns the text to its leading edge.": {"zh": "重要的是显示选项的文本，需要与故事页面文本对齐。要对文本进行对齐，你将使用两个修饰符: .multilineTextAlignment 和 frame。应用他们来对文本进行顺序对齐。", "tips": ""}, "Step 11": {"zh": "第十一步", "tips": ""}, "The .frame modifier puts the text inside an invisible frame. By specifying maxWidth: .infinity, you’re telling the frame to expand as wide as it’s allowed, and alignment: .leading aligns the text inside the frame to the leading edge.": {"zh": ".frame 修饰符将文本放在不可见的区域中。通过指定 maxWidth: .infinity，你告诉视图可以扩展到最大宽度，alignment: .leading 使文本在区域内顺序对齐。", "tips": ""}, "Try removing or changing these modifiers to see how they affect the choice text.": {"zh": "尝试删除或者更改这些修饰符来看如何影响选项文本。", "tips": ""}, "Step 12": {"zh": "第十二步", "tips": ""}, "These next three modifiers provide a pleasing visual style to the NavigationLink view for each choice. The .padding modifier adds some space around the link’s contents. The .background modifier applies a gray color with 25 percent opacity, and the .cornerRadius modifer rounds its corners.": {"zh": "接下来的三个修饰符为每个选项添加一些美观的视觉样式。 .padding 修饰符为链接的内容添加一些空白边距。 .background 修饰符为背景色应用 25% 的透明度，.cornerRadius 修饰符为圆角。", "tips": ""}, "You can experiment with these modifiers to change how the choice links look. For example, try removing or changing the padding, or changing the background color.": {"zh": "你可以尝试修改这些修饰符来改变选项链接的样式。例如，尝试删除或者更改填充，或更改背景颜色。", "tips": ""}, "Step 13": {"zh": "第十三步", "tips": ""}, "These two modifiers apply to a view when it’s enclosed in a navigation view. A navigation view provides a navigation bar at the top of the screen that can display a title and a back button, along with other items you can customize, such as extra buttons and text.": {"zh": "当视图被包含在 NavigationView 中时，这两个修饰符适用于视图。它提供了导航栏，在屏幕顶部显示标题和返回按钮，以及其他你可以自定义的项目，例如额外按钮和文本。", "tips": ""}, "Step 14": {"zh": "第十四步", "tips": ""}, "You can display the current page number in the navigation bar by setting its title using the .navigationTitle modifier. Because people expect page numbers to begin at 1, but array indices start at 0, you’ll need to add 1 to the pageIndex property.": {"zh": "你可以通过使用 .navigationTitle 来在导航栏中显示当前页面的索引。因为人们期望页面的索引从 1 开始，但数组索引始终从 0 开始，所以你需要在 pageIndex 属性中添加 1。", "tips": ""}, "Step 15": {"zh": "第十五步", "tips": ""}, "The .navigationBarTitleDisplayMode modifier controls how the title appears in the navigation bar. Providing .inline as the modifier’s value makes the title smaller in size. You can try the other two possible values — .automatic and .large — to see how they make the app look.": {"zh": ".navigationBarTitleDisplayMode 指定如何显示标题。.inline 作为值，让标题变小。尝试其他两种值：.automatic 和 .large 来看看它们如何改变应用程序的样式。", "tips": ""}, "Date Planner": {"zh": "日期计划", "tips": ""}, "Present hierarchical information in a list.": {"zh": "在列表中呈现层次化信息。", "tips": ""}}
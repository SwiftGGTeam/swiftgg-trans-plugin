{"Choosing the right way to hide a view": {"zh": "选择正确的方式来隐藏一个视图", "tips": ""}, "Control whether a view exists, and how that affects the overall layout.": {"zh": "控制视图是否存在以及它对整体布局的影响。", "tips": ""}, "If your design has views that aren’t always relevant, you have a choice about how their absence affects the overall layout. You can lay out all the other content as if the view doesn’t exist, then update the position of the other content when the view becomes visible. Or, you can reserve space for the view regardless of whether it’s visible, so that when it becomes visible, none of the other content needs to move to accommodate it.": {"zh": "如果你的设计中有一些视图并不总是相关的，那你可以选择如何处理它们的存在与否对于整体布局的影响。 如果该视图不存在，你就在当它不存在的情况下布局其他内容，然后在该视图变为可见时更新其他内容的位置以适应新的布局。 或者无论一个视图是否可见，你都预留空间给它，这样当它变为可见时，其他内容就无需位置移动以适应它。", "tips": ""}, "To experiment with the code, download the project files and open the sample in Xcode.": {"zh": "要实践这段代码的话，请下载项目文件并在 Xcode 中打开示例。", "tips": ""}, "Conditionally removing a view": {"zh": "有条件地移除一个视图", "tips": ""}, "Your design might have a login screen that doesn’t show an error message the first time it appears, but adds an error message after someone mistypes their password. The user name and password fields shouldn’t shift position depending on whether the error message is visible. Use an opacity(_:) modifier with a value of 0 so that the layout accounts for the error message whether or not it’s visible. You can also use this strategy for removing a view that doesn’t affect other views’ placement, like a view inside an overlay(alignment:content:) modifier.": {"zh": "你的设计中可能包含一个登录界面，在首次出现时不会显示错误信息，但在用户输错密码后会显示一个错误信息。用户名和密码输入框不应该根据错误信息是否可见而改变其位置。 你可以使用 opacity(_:) 修饰符，并将其值设置为 0，这样无论错误信息是否可见，系统都会考虑到它的存在而进行布局。 你还可以在不影响其他视图位置的情况下，使用这种策略来移除一个视图，比如在 overlay(alignment:content:) 修饰符中的视图。", "tips": ""}, "Or, you might have an order Form that displays a second set of address fields if a person chooses not to use the same address for their shipping and billing addresses. For content like address fields that people might need to scroll past, use an if statement to only make room for the content when it’s visible, and shift other content as it appears and disappears.": {"zh": "或者你可能有一个表示订单的 Form 视图，如果一个人选择收货和账单地址不相同，就会需要显示第二套输入地址的控件。 对于像地址字段这样的内容，人们可能需要滚动浏览，所以你可以使用 if 语句来仅在它们可见时为其预留空间，并在它们出现和消失时调整其他内容的位置。", "tips": ""}, "If you need to reserve space in a layout based on the measurement of a view, but never want to show that view, you can use the hidden() modifier.": {"zh": "如果你需要在布局中基于一个视图的尺寸来保留其空间，但又不想显示该视图，你可以使用 hidden() 修饰符。", "tips": ""}, "VoiceOver and gesture recognizers also ignore a view that you remove in any of these ways.": {"zh": "VoiceOver 和手势识别器也会忽略用以上任何一种方式移除的视图。", "tips": ""}, "To show the differences between these approaches, this example uses a sequence of train cars. Each train has three views — a front, middle, and rear section — and uses the train car symbols from SF Symbols. For a long train, the front, middle, and rear car all appear. For a shorter train, the middle car doesn’t appear. The code that defines each train uses a different technique to omit the middle car.": {"zh": "为了展示这些方法之间的区别，以下示例使用了一系列火车车厢符号。每个火车有三个视图：前部、中部和后部，并都使用了 SF Symbols 中的符号。 对于一个完整的火车，前部、中部和后部的车厢都会显示。对于短火车，中部车厢不会显示。每个例子都使用了不同的技术来隐藏中部车厢。", "tips": ""}, "Step 1": {"zh": "第一步", "tips": ""}, "In these examples, the longerTrain property tracks whether to show or hide the middle train car.": {"zh": "在例子中，longerTrain 属性用来表示是否隐藏中间的火车车厢符号。", "tips": ""}, "In a full app, the data determining whether to hide a view might be a Binding, or an Environment value.": {"zh": "在一个实际的 app 中，决定是否隐藏视图的数据可能是一个 Binding 或 Environment 值。", "tips": ""}, "Step 2": {"zh": "第二步", "tips": ""}, "The first train uses if, a conditional clause, to control the middle car. When longerTrain is true, the middle car is part of the train. When longerTrain is false, the middle car doesn’t exist, and the other cars are closer together.": {"zh": "第一个例子使用 if 语句来控制中间的车厢符号是否显示。当 longerTrain 为 true 时，中间的车厢符号会显示成火车的一部分。而当 longerTrain 为 false 时，这个符号不存在，其他符号则会互相接近。", "tips": ""}, "You can also use an else clause the same way. The contents of the else clause only exist when the condition is false.": {"zh": "您也可以使用 else 子句达到相同的目的。else 子句中的内容只在条件为假时会执行。", "tips": ""}, "Step 3": {"zh": "第三步", "tips": ""}, "The second train uses the opacity(_:) modifier to control the visibility of the middle car. When longerTrain is true, the middle car is part of the train, and it looks just like the previous conditional example. But when longerTrain is false, the middle car still takes up space in this train.": {"zh": "第二个例子则使用 opacity(_:) 修饰符来控制中间的车厢符号是否可见。当 longerTrain 为 true 时，中间车厢符号是火车的一部分，显示效果和之前的例子相同。 但当 longerTrain 为 false 时，这个符号仍然占据中间的空间，但是变为不可见。", "tips": ""}, "Use an opacity modifier when you don’t want other content to shift around as the view appears or disappears.": {"zh": "当你不希望一个视图的出现或消失会让其他内容发生位置变化时，可以使用 opacity 修饰符。", "tips": ""}, "Section 1": {"zh": "第一节", "tips": ""}}
{"Creating a custom input control that binds to a value": {"zh": "创建一个与特定值绑定的输入控件", "tips": ""}, "Provide interactions that are unique to your app with custom controls that bind to a value.": {"zh": "通过使用与特定值绑定的自定义控件为你的应用提供独一无二的交互体验。", "tips": ""}, "SwiftUI provides input controls like Slider, TextField, and many others that bind to a value and can change the value as a person’s interacts with the control. But every app is different. You may find that you need a custom control that provides behavior unique to your app.": {"zh": "SwiftUI 提供了一些与特定值绑定的输入控制组件，例如滑动条，文本输入框等。这些组件的值会随着用户与其交互而改变。但是每个应用都是独一无二的。你可能会发现，你需要一个自定义控件来提供你的应用所特有的交互行为。", "tips": ""}, "SwiftUI provides the building blocks you need to create a custom input control for your app. This tutorial walks through an example of one such control, a rating control. The sample app uses this control to let people rate recipes from 1 to 5 stars.": {"zh": "SwiftUI 提供了你为你的应用创建自定义输入控件所需要的构建组件。本教程将介绍这样控件的一个例子，也就是一个评级控件。该案例应用通过这个控件让用户给菜谱从 1 到 5 星评分", "tips": ""}, "To experiment with the code, download the project files and open the sample in Xcode.": {"zh": "如果要亲自尝试代码，请下载项目文件，并在Xcode中打开案例。", "tips": ""}, "Design a custom control": {"zh": "设计一个自定义控件", "tips": ""}, "Before implementing a custom control, ask yourself what data does the control need, what does it do with that data, and how it does it represent that data visually within the app. The sample app, for instance, needs an Int property that represents the rating of a recipe. The control needs to be able to change the value of this property. And because the control shows the rating of a recipe, it needs to display a set of stars that reflects the rating value; for instance, the control displays five stars when the rating value is 5.": {"zh": "在实现一个自定义控件之前，请问问自己这个控件需要什么数据，它用这些数据做什么，以及它如何在应用中直观地展现这些数据。例如，在这个例子中，需要一个 Int 属性来表示一个菜谱的等级。所以控件需要能够改变这个属性的值。并且因为该控件显示了食谱的评级，所以它需要展示一组星星用于反应评级；例如，当评级为 5 时，该控件显示五颗星。", "tips": ""}, "Step 1": {"zh": "第一步", "tips": ""}, "The sample defines the custom control as a structure named StarRating.": {"zh": "这个案例将自定义控件定义为一个叫做 StarRating 的结构体。", "tips": ""}, "This structure conforms to the View protocol because the control appears as part of the app’s user interface.": {"zh": "这个结构体符合 View 协议，因为这个控件将作为应用用户界面的一部分出现。", "tips": ""}, "Step 2": {"zh": "第二步", "tips": ""}, "The structure defines a Binding variable named rating, which stores the rating of a recipe.": {"zh": "这个结构体定义了一个名为 rating 的 Binding 变量，用来存储对配方的评级。", "tips": ""}, "By defining rating as a binding variable, StarRating can read and write the value even though another view is responsible for creating the value.": {"zh": "通过将 ratting 定义为一个绑定变量，StarRating 可以读取和写入该值，即使这个值是由另一个视图负责创建的。", "tips": ""}, "Step 3": {"zh": "第三步", "tips": ""}, "The private constant maxRating stores the highest rating possible that a person can give a recipe.": {"zh": "私有常量 maxRating 存储量用户可以给配方的最高评分。", "tips": ""}, "Step 4": {"zh": "第四步", "tips": ""}, "Note": {"zh": "注释", "tips": ""}, "Step 5": {"zh": "第五步", "tips": ""}, "The HStack displays the rating stars in a horizontal line.": {"zh": "HStack 以水平的方式显示星级。", "tips": ""}, "Step 6": {"zh": "第六步", "tips": ""}, "Inside the HStack, the control uses a ForEach structure to display the number of stars indicated by the maxRating constant.": {"zh": "在 HStack中，使用了一个 ForEach 结构来显示星星，星星的数量与常量 maxRating 一样。", "tips": ""}, "ForEach iterates through a collection of data defined as a range of Int instances, 1 to 5.": {"zh": "ForEach 遍历了一个由从一到五 Int 实例组成的数据集合。", "tips": ""}, "Important": {"zh": "重要提示", "tips": ""}, "The id parameter is of type ID, which is Hashable. The ForEach structure uses this parameter to identify the data, that is, the integer values 1 through 5. The parameter value is the identity key path \\.self, which specifies an Int instance for each integer. Because Int is hashable, using this key path satisfies the requirements of the ForEach initializer method init(_:id:content:). And because the data is an increasing range of integers that will never have duplicate values, it’s okay to use each integer value as its identifier.": {"zh": "id 参数的类型是 ID，它符合 Hashable 协议。ForEach 结构使用这个参数来识别数据，也就是从1到5的整数值。这个参数值是一个用于标识的 Key-Path 表达式 \\.self，它为每个遍历的整数指定了一个 Int 实例。因为 In t是 Hashable 的，使用这个 Key-Path 表达式满足了 ForEach 初始化方法 init(_:id:content:) 的要求。而且因为 ForEach 遍历的数据有永远不会重复，且持续增长，所以使用每个数据的整数值作为它的标识符是可行的。", "tips": ""}, "Step 7": {"zh": "第七步", "tips": ""}, "The control displays a star using an instance of Image.": {"zh": "这个控件通过一个 Image 的实例来展示星星图片。", "tips": ""}, "The sample displays an image of a star using the initializer method init(systemName:). This method creates an image view that displays a system symbol image. Symbol images like star come from SF Symbols, a library of iconography that you can use in your app.": {"zh": "该例子使用初始化方法 init(systemName:) 显示一个星星图像。这个方法创建了一个图像视图，显示一个系统图像符号。像星星这样的符号图像来自 SF Symbols，这是一个你可以在你的应用中随意使用的图标库。", "tips": ""}, "Experiment": {"zh": "实践", "tips": ""}, "Change the symbol from a star to another symbol such as circle.": {"zh": "尝试将符号从星星改为其他符号，如圆圈。", "tips": ""}, "Step 8": {"zh": "第八步", "tips": ""}, "The control displays a filled star when the integer value is less than or equal to the rating value and an empty star when the integer value is greater than rating, so the control applies the symbolVariant(_:) modifier to the Image instance.": {"zh": "当 value 数值小于或等于 ratting 值时，控件会显示一个填充的星星，当 value 值大于 ratting 值时，会显示一个空的星星，所以控件对 Image 实例应用了 symbolVariant(_:) 修改器来修改图片的填充状态。", "tips": ""}, "To determine which SymbolVariants to apply, fill or none, the control uses a ternary conditional operator. This operator takes three parts, which takes the form of question ? answer1 : answer2. For more information, see Ternary Conditional Operator.": {"zh": "为了确定应用哪种 SymbolVariants，也就是填充还是不填充，该控件使用了一个三元运算符。这个运算符有三个部分，其形式为 question ? answer1 : answer2。更多信息，请参见三元条件运算符。", "tips": ""}, "Step 9": {"zh": "第九步", "tips": ""}, "The control set the color of the stars using the foregroundColor(_:) view modifier.": {"zh": "该控件使用 foregroundColor(_:) 视图修改器来设置星星的颜色。", "tips": ""}, "Make the control interactive": {"zh": "让控件具有交互性", "tips": ""}, "StarRating is able to display a set of stars to indicate the rating of a recipe. For instance, if the recipe’s rating is 4, the control displays four filled stars, followed by one empty star. To make StarRating interactive, it uses the onTapGesture(count:perform:) action.": {"zh": "StarRating 能够显示一组星星来表示对一个食谱的评级。例如，如果菜谱的等级是4，该控件就会显示四颗填充的星和一颗空星。为了使 StarRating 具有交互性，我们使用了 onTapGesture(count:perform:) 动作。", "tips": ""}, "To make it possible for a person to interact with the rating control, StarRating adds the onTapGesture(count:perform:) action to each Image instance created in the ForEach loop.": {"zh": "为了使用户于评分空间交互成为可能，StarRating 给每个在 ForEach 循环中创建的 Image 实例添加了 onTapGesture(count:perform:) 动作。", "tips": ""}, "The tap gesture performs the action defined in the closure when a person clicks or taps a star Image instance. The star indicates the rating that StarRating assigns to the recipe. For example, if a person taps the fourth star, the recipe’s rating is set to 4. Tap the fourth star again and StarRating resets the recipe’s rating to 0 or no stars.": {"zh": "当一个人点击一个星星 Image 实例时，就会执行在 onTapGesture 的闭包中定义的动作。星星表示了用户通过 StarRating 分配给菜谱的评级。例如，如果一个人点了第四颗星，菜谱的评级就会被设置为 4。再点第四颗星，StarRating 就会将菜谱的评级重置为 0 级。", "tips": ""}, "When the integer value isn’t equal to the rating value, the closure sets rating to the integer value, which indicates the new rating that the person assigns to the recipe.": {"zh": "当 value 不等于 rating 时，闭包将 rating 设置为 value 的值，这表示用户给菜谱设置了一个新评级。", "tips": ""}, "By setting rating to the integer value, StarRating updates its appearance to show filled stars up to the number identified by value, followed by empty stars up to the number identified by maxRating.": {"zh": "通过设置 rating 的值，StarRating 更新了它的外观，以显示 value 所确定的填充星星数，和 value 和 maxRating 所确定的空星星数。", "tips": ""}, "When the integer value is equal to the rating value, the closure resets the recipe’s rating to no stars by setting rating to 0.": {"zh": "当 value 等于 rating 的值时，闭包通过将 rating 设置为 0，以将评级设置为无星。", "tips": ""}, "StarRating displays five empty stars to indicate that the recipe has no rating.": {"zh": "StarRating 将会显示五个空星，表示该食谱没有评级。", "tips": ""}, "Display the custom control in other views": {"zh": "在其他视图展示我们的自定义控件", "tips": ""}, "StarRating is ready to go. It has the data it needs, it can apply changes to that data, and it can visually represent the current state of the data in the app’s user interface. The next step is to make use of the custom input control.": {"zh": "StarRating 控件已经准备好了。它有它所需要的数据，可以展示这些数据的变化，并且它可以在应用的用户界面上直观地表示数据的当前状态。那么下一步就是利用我们的自定义输入控件。", "tips": ""}, "In the sample app, StarRating appears under the recipe title that appears in the recipe detail view.": {"zh": "在示例应用中，StarRating 会出现在食谱详细视图中的标题下。", "tips": ""}, "The structure RegularTitleView is a view that displays the title and subtitle of a recipe along with its rating.": {"zh": "结构体 RegularTitleView 是一个显示菜谱的标题和副标题以及其评级的视图。", "tips": ""}, "RegularTitleView defines a binding variable that stores a recipe received from another view.": {"zh": "RegularTitleView 定义了一个绑定变量，用来存储从另一个视图接收的配方信息。", "tips": ""}, "This binding allows the view to read and write data to an instance of Recipe. However, the view isn’t the owner of the recipe. Another view in the sample is responsible for creating and owning the Recipe instance.": {"zh": "这种绑定允许视图读取和写入数据 Recipe 实例。然而，该视图并不是该 Recipe 实例的所有者。案例中的另一个视图负责创建并且拥有 Recipe 实例。", "tips": ""}, "The view shares a binding to the recipe’s rating property with the custom control StarRating, which allows the control to read and write to that property.": {"zh": "视图与自定义控件 StarRating 共享对配方评级属性的绑定，这使控件可以读取和写入该属性。", "tips": ""}, "As a person interacts with the StarRating control, SwiftUI redraws the view to reflect the selected rating.": {"zh": "当一个人与 StarRating 控件互动时，SwiftUI 会重新绘制视图以反映所选的评级。", "tips": ""}, "The dollar sign ($) prefix on the variable name recipe indicates that the call is passing a binding to StarRating.": {"zh": "变量名称 recipe 上的美元符号（$）前缀表明，该调用正在向 StarRating 传递一个绑定值。", "tips": ""}, "Defining the source of truth using a custom binding": {"zh": "使用自定义绑定来定义事实来源", "tips": ""}, "Provide an alternative to a state variable by using a custom binding.": {"zh": "通过使用自定义绑定提供一个状态变量的替代方案。", "tips": ""}, "Change the color of the stars by replacing accentColor with a different color, such as yellow.": {"zh": "尝试用不同的颜色（如黄色）替换 accentColor 来改变星星的颜色。", "tips": ""}, "Every SwiftUI view must implement body to provide the contents of the view.": {"zh": "每个 SwiftUI 视图都必须实现 body 属性以提供视图内容。", "tips": ""}, "Like all other SwiftUI views, StarRating implements the required computed property body.": {"zh": "像所有其他 SwiftUI 视图一样，StarRating 实现了所需的计算属性 body。", "tips": ""}}
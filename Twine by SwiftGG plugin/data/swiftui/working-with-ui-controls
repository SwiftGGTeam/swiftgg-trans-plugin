{"Note": {"zh": "笔记", "tips": ""}, "SwiftUI works seamlessly with the existing UI frameworks on all Apple platforms. For example, you can place UIKit views and view controllers inside SwiftUI views, and vice versa.": {"zh": "SwiftUI 可与所有 Apple 平台上的现有 UI 框架无缝协作。 例如，你可以将 UIKit 视图和视图控制器放置在 SwiftUI 视图中，反之亦然。", "tips": ""}, "SwiftUI provides storage in the environment for values you can access using the @Environment property wrapper. Access the editMode value to read or write the edit scope.": {"zh": "SwiftUI 在环境中提供了存储，你可以使用 @Environment 属性包装器访问这些值。访问 editMode 值以读取或写入编辑范围。", "tips": ""}, "The first control in the view is a TextField, which controls and updates a string binding — in this case, the user’s chosen display name. You provide a label and a binding to a string when creating a text field.": {"zh": "视图中的第一个控件是 TextField，它控制和更新字符串绑定——在本例中，是用户选择的显示名称。 你在创建文本字段时提供标签和字符串绑定。", "tips": ""}, "Add an Edit Mode": {"zh": "添加编辑模式", "tips": ""}, "Step 5": {"zh": "步骤 5", "tips": ""}, "Delay Edit Propagation": {"zh": "编辑数据延迟保存同步", "tips": ""}, "Check Your Understanding": {"zh": "", "tips": ""}, "Update ProfileSummary to add several badges with varying hues and reasons for earning the badge.": {"zh": "更新 ProfileSummary 添加几个具有不同色调和成就描述的徽章。", "tips": ""}, "Update the conditional content in ProfileHost to include the profile editor and pass along the profile binding.": {"zh": "更新 ProfileHost 中的条件内容，包括个人资料编辑器，并传递个人资料进行绑定。", "tips": ""}, "Update the ModelData class to include an instance of the user profile that persists even after the user dismisses the profile view.": {"zh": "更新 ModelData 类，类包含一个用户个人资料的实例，该实例在用户关闭个人资料视图后仍然存在。", "tips": ""}, "Step 6": {"zh": "步骤 6", "tips": ""}, "The EditButton controls the same editMode environment value that you accessed in the previous step.": {"zh": "EditButton 控制你在上一步中访问的 editMode 值。", "tips": ""}, "Add an Environment view property that keys off of the environment’s \\.editMode.": {"zh": "添加一个 Environment 视图属性，该属性基于环境的 .editMode。", "tips": ""}, "For consistency with the profile summary, you’ll add the profile details in the same order in the editor.": {"zh": "为了与个人资料简介保持一致，你将在编辑器中以相同的顺序添加个人资料详细信息。", "tips": ""}, "The profile summary takes a Profile value rather than a binding to the profile because the parent view, ProfileHost, manages the state for this view.": {"zh": "个人资料摘要接收一个 Profile 值，而不是与个人资料绑定，因为由父视图 ProfileHost 负责管理这个视图的状态。", "tips": ""}, "Read the user’s profile data from the environment to pass control of the data to the profile host.": {"zh": "从环境中读取用户的偏好设置数据，将数据的控制权传递给偏好设置页面。", "tips": ""}, "Apply the onAppear(perform:) and onDisappear(perform:) modifiers to populate the editor with the correct profile data and update the persistent profile when the user taps the Done button.": {"zh": "应用 onAppear(perform:) 和 onDisappear(perform:) 修饰符，以在编辑器中填充正确的个人资料数据，并在用户点击“完成”按钮时更新本地化的个人资料。", "tips": ""}, "Update ProfileHost to display the new summary view.": {"zh": "更新 ProfileHost 显示新的摘要视图。", "tips": ""}, "Step 8": {"zh": "步骤 8", "tips": ""}, "The user profile editor consists primarily of different controls that change individual details in the profile. Some items in the profile, like the badges, aren’t user-editable, so they don’t appear in the editor.": {"zh": "用户个人资料编辑器主要由不同的控件组成，这些控件可以更改个人资料中的各个详细信息。个人资料中的一些项目，如徽章，不可供用户编辑，因此它们不会出现在编辑器中。", "tips": ""}, "Step 3": {"zh": "步骤 3", "tips": ""}, "Step 4": {"zh": "步骤 4", "tips": ""}, "In the Landmarks app, users can create a profile to express their personality. To give users the ability to change their profile, you’ll add an edit mode and design the preferences screen.": {"zh": "在 Landmarks 应用程序中，用户可以创建个人资料来表达自己的个性。 为了让用户能够更改他们的个人资料，你需要添加一个编辑模式并设计偏好设置页面。", "tips": ""}, "You can see the effect of entering edit mode by running the live preview and tapping the edit button. For now, the Edit mode view is just a static text field.": {"zh": "你可以通过运行实时预览并点击编辑按钮来查看进入编辑模式的效果。 目前，编辑模式视图只是一个静态文本字段。", "tips": ""}, "Create another view in the Profiles group named ProfileSummary that takes a Profile instance and displays some basic user information.": {"zh": "在 Profiles 分组中创建另一个名为 ProfileSummary 的视图，该视图接收一个 Profile 实例并显示一些基本的用户信息。", "tips": ""}, "Start by defining a user profile in a new Swift file named Profile.swift that you add to your project’s Model group.": {"zh": "首先在一个名为 Profile.swift 的新 Swift 文件中定义一个用户配置文件，将它添加到项目的 Models 目录中。", "tips": ""}, "Add the listStyle modifier to pick a list style that better suits the content.": {"zh": "添加 listStyle 修饰符以选择更适合内容的列表样式。", "tips": ""}, "Add a cancel button to ProfileHost.": {"zh": "向 ProfileHost 添加取消按钮。", "tips": ""}, "Define the Profile Editor": {"zh": "定义个人信息编辑器", "tips": ""}, "Finally, add a DatePicker below the season selector to make the landmark visitation goal date modifiable.": {"zh": "最后，在季节选择器下方添加一个 DatePicker，使地标参观日期可修改。", "tips": ""}, "In CategoryHome.swift, add a user profile button to the navigation bar using the toolbar modifier, and present the ProfileHost view when the user taps it.": {"zh": "在 CategoryHome.swift 中，使用 toorbar 修饰符将用户偏好设置按钮添加到导航栏，并在用户点击它时显示 ProfileHost 视图。", "tips": ""}, "Section 2": {"zh": "第 2 节", "tips": ""}, "Follow the steps to build this project, or download the finished project to explore on your own.": {"zh": "按照步骤构建此项目，或下载已完成的项目以自行探索。", "tips": ""}, "Toggles are controls that are either on or off, so they’re a good fit for Boolean values like a yes or no preference.": {"zh": "Toggles 是开关控件，因此它们非常适合布尔值，例如是否打开偏好。", "tips": ""}, "The badge’s drawing logic produces a result that depends on the size of the frame in which it renders. To ensure the desired appearance, render in a frame of 300 x 300 points. To get the desired size for the final graphic, then scale the rendered result and place it in a comparably smaller frame.": {"zh": "徽章的绘制逻辑产生的结果取决于它呈现的布局框的大小。 为确保理想的外观效果，请在300 x 300点的布局框中进行渲染。然后，缩放渲染结果并将其放置在一个相对较小的框架中，以获得最终图形的期望尺寸。", "tips": ""}, "Step 9": {"zh": "步骤 9", "tips": ""}, "The Landmarks app locally stores some configuration details and preferences. Before the user edits their details, they’re displayed in a summary view that doesn’t have any editing controls.": {"zh": "Landmarks 应用程序在本地存储了一些配置细节和偏好设置。在用户编辑个人信息之前，这些信息将显示在一个没有编辑控件的摘要视图中。", "tips": ""}, "Create an Edit button that toggles the environment’s editMode value on and off.": {"zh": "创建一个编辑按钮，用于打开和关闭环境的 editMode 值。", "tips": ""}, "Add a conditional view that displays either the static profile or the view for Edit mode.": {"zh": "添加显示静态配置文件或编辑模式视图的条件视图。", "tips": ""}, "Section 3": {"zh": "第 3 节", "tips": ""}, "Otherwise, the old values appear the next time edit mode activates.": {"zh": "不这样做的话，旧的值会在下次进入编辑模式时出现。", "tips": ""}, "The badge is just a graphic, so the text in HikeBadge along with the accessibilityLabel(_:) modifier make the meaning of the badge clearer to other users.": {"zh": "徽章只是一个图形，因此 HikeBadge 中的文本以及 accessibilityLabel(_:) 修饰符能够使其他用户更清楚徽章的含义。", "tips": ""}, "The ProfileHost view will host both a static, summary view of profile information and an edit mode.": {"zh": "ProfileHost 视图将同时承载个人资料信息的静态摘要视图和编辑模式。", "tips": ""}, "Step 1": {"zh": "步骤 1", "tips": ""}, "Interfacing with UIKit": {"zh": "", "tips": ""}, "Next, create a new group named Profiles under the Views group, and then add a view named ProfileHost to that group with a text view that displays the username of a stored profile.": {"zh": "接下来，在 Views 目录下创建一个名为 Profiles 的新文件夹，然后向该文件夹添加一个名为 ProfileHost 的视图，该视图包含一个文本视图，用于显示存储的个人资料中的用户名。", "tips": ""}, "Step 10": {"zh": "步骤 10", "tips": ""}, "Users need to toggle between viewing or editing their profile details. You’ll add an edit mode by adding an EditButton to the existing ProfileHost, and then creating a view with controls for editing individual values.": {"zh": "用户需要在查看或编辑个人资料详细信息之间切换。你将通过向现有的 ProfileHost 添加 EditButton 来添加编辑模式，然后创建一个带有用于编辑各个值的控件的视图。", "tips": ""}, "Display a User Profile": {"zh": "展示用户个人资料", "tips": ""}, "Unlike the Done button that EditButton provides, the Cancel button doesn’t apply the edits to the real profile data in its closure.": {"zh": "与 EditButton 提供的 Done 按钮不同，Cancel 按钮不会在其闭包中将编辑应用到原始的偏好数据中。", "tips": ""}, "Place a Picker control and its label in a VStack to make the landmark photos have a selectable preferred season.": {"zh": "将一个 Picker 控件及其标签放置在一个 VStack 中，使地标照片具有可选择的首选季节。", "tips": ""}, "Finish off the profile summary by including a HikeView from Animating Views and Transitions.": {"zh": "通过包含一个从 Animating Views and Transitions 教程的 HikeView 来完成偏好设置摘要。", "tips": ""}, "Section 4": {"zh": "第 4 节", "tips": ""}, "Create a new view named ProfileEditor and include a binding to the draft copy of the user’s profile.": {"zh": "创建一个名为 ProfileEditor 的新视图，并包含对用户配置文件编辑草稿副本的绑定。", "tips": ""}, "Add a toggle that corresponds with the user’s preference for receiving notifications about landmark-related events.": {"zh": "添加一个开关，对应用户接收与地标相关事件通知的偏好。", "tips": ""}, "Section 1": {"zh": "第 1 节", "tips": ""}, "Create a new view named HikeBadge in the Hikes folder that composes the Badge from Drawing Paths and Shapes along with some descriptive text about the hike.": {"zh": "在 Hikes 文件夹中创建一个名为 HikeBadge 的新视图，该视图由 Drawing Paths and Shapes 教程中的 Badge 以及一些关于远足的描述性文本组成。", "tips": ""}, "To use the hike data, you also need to add a model data environment object.": {"zh": "要使用远足数据，你还需要添加一个环境中的模型数据对象。", "tips": ""}, "To make it so edits don’t take effect until after the user exits edit mode, you use the draft copy of their profile during editing, then assign the draft copy to the real copy only when the user confirms an edit.": {"zh": "为了让编辑在用户退出编辑模式后才生效，你可以在编辑过程中使用用户个人资料的草稿副本，然后在用户确认编辑时将草稿副本设置给原始数据。", "tips": ""}, "To avoid updating the global app state before confirming any edits — such as while the user enters their name — the editing view operates on a copy of itself.": {"zh": "为了避免在确认任何编辑之前更新全局应用状态（例如，在用户输入姓名时），编辑视图将在它自身的副本上修改。", "tips": ""}, "Step 2": {"zh": "步骤 2", "tips": ""}, "Now the edit profile view displays when you tap Edit.": {"zh": "现在，当你点击编辑时，会显示编辑配置文件视图。", "tips": ""}, "Even though this view doesn’t use a property with the @EnvironmentObject attribute, ProfileSummary, a child of this view, does. So without the modifier, the preview fails.": {"zh": "即使此视图不使用具有 @EnvironmentObject 的属性，但 ProfileSummary（这个视图的子视图）需要使用。因此，如果没有这个修饰符，预览将无法进行。", "tips": ""}, "Switch to the live preview and try tapping the profile button to examine the profile summary.": {"zh": "切换到实时预览，尝试点击个人资料按钮以查看个人资料摘要。", "tips": ""}, "Step 7": {"zh": "步骤 7", "tips": ""}, "Working with UI Controls": {"zh": "", "tips": ""}, "Select ProfileHost and add the model data as an environment object to the preview.": {"zh": "选择 ProfileHost 并将模型数据作为环境对象添加到预览中。", "tips": ""}, "You’ll work with a variety of common user interface controls for data entry, and update the Landmarks model types whenever the user saves their changes.": {"zh": "你将使用各种常见的用户界面控件进行数据输入，并在用户保存更改时更新地标模型类型。", "tips": ""}}
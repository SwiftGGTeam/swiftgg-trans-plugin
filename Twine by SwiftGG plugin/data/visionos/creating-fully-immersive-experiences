{"Creating fully immersive experiences in your app": {"zh": "在应用中构建完全沉浸式的体验", "tips": ""}, "Build fully immersive experiences by combining spaces with content you create using RealityKit or Metal.": {"zh": "将 RealityKit 或 Metal 创建的内容与空间结合，构建完全沉浸式的体验。", "tips": ""}, "Overview": {"zh": "概述", "tips": ""}, "A fully immersive experience replaces everything the person sees with custom content you create. You might use this type of experience to:": {"zh": "完全沉浸式的体验会用你创建的自定义内容替代用户看到的一切。你可以使用这种类型的体验来：", "tips": ""}, "Offer a temporary transitional experience": {"zh": "提供一种临时的过渡性体验", "tips": ""}, "Create a distraction-free space for your content": {"zh": "为你的内容创建一个不受干扰的空间", "tips": ""}, "Implement a virtual reality (VR) game": {"zh": "实现虚拟现实(VR)游戏", "tips": ""}, "Present a virtual world to explore": {"zh": "呈现一个可以探索的虚拟世界", "tips": ""}, "With a fully immersive experience, you’re responsible for everything that appears onscreen. The system hides passthrough video and displays the content you provide, showing the person’s hands only when they come into view. To achieve the best performance, use RealityKit or Metal to create and animate your content.": {"zh": "在完全沉浸式的体验中，你要负责屏幕上显示的所有内容。系统隐藏摄像头捕捉到的实时视频，显示你提供的内容，只有当人出现在视野里时会显示人的手部。为了获得最佳性能，请使用 RealityKit 或 Metal 来创建内容并为其制作动画。", "tips": ""}, "Typically, you combine a fully immersive experience with other types of experiences and provide transitions between them. When you display a window first and then offer controls to enter your immersive experience, you give people time to prepare for the transition. It also gives them the option to skip the experience if they prefer to use your app’s windows instead.": {"zh": "通常来讲，你将完全沉浸式的体验与其他类型的体验结合起来，并在它们之间提供过渡。当你先显示一个窗口，然后提供控件以进入你的沉浸式体验时，你为用户准备过渡提供了时间。这也为用户提供了选择，如果用户更愿意使用你的应用程序的窗口，可以跳过该体验。", "tips": ""}, "Prepare someone for your app’s transitions": {"zh": "应用程序的过渡使用户做好准备", "tips": ""}, "Give people control over when they enter or exit fully immersive experiences, and provide clear transitions to and from those experiences. Clear visual transitions make it easier to adjust to such a large change. Sudden transitions might be disorienting, unpleasant, or make the person think something went wrong.": {"zh": "让用户有权控制何时进入或退出沉浸式的体验，并为这些体验提供明确的过渡。清晰的视觉过渡让用户更容易适应如此巨大的变化。突然的过渡可能会让人感到迷失、不愉快，或让人认为出现了问题。", "tips": ""}, "At launch time, display windows or other content that allows the person to see their surroundings. Add controls to that content to initiate the transition to the fully immersive experience, and provide a clear indication of what the controls do. Inside your experience, provide clear controls and instructions on how to exit the experience.": {"zh": "在启动时，显示窗口或其他内容，让用户能够看到周围环境。向该内容添加控件，以启动进入完全沉浸式体验的过渡，并清晰指出控件的功能。在用户的体验中，提供清晰的关于如何退出体验的控件和说明。", "tips": ""}, "Warning": {"zh": "警告", "tips": ""}, "When you start a fully immersive experience, visionOS defines a system boundary that extends 1.5 meters from the initial position of the person’s head. If their head moves outside of that zone, the system automatically stops the immersive experience and turns on the external video again. This feature is an assistant to help prevent someone from colliding with objects.": {"zh": "当你启动完全沉浸式体验时，visionOS 定义了一个系统边界，其范围从用户头部的初始位置延伸 1.5 米。如果用户的头部移动到该区域之外，系统会自动停止沉浸式体验并重新打开外部视频。这个功能有助于防止用户撞到物体。", "tips": ""}, "For guidelines on how to design fully immersive experiences, see Human Interface Guidelines.": {"zh": "有关如何设计完全沉浸式体验的指南，请阅读 [人机界面指南](https://developer.apple.com/design/human-interface-guidelines)。", "tips": ""}, "Open an immersive space": {"zh": "打开一个沉浸式空间", "tips": ""}, "To create a fully immersive experience, open an ImmersiveSpace and set its style to full. An immersive space is a type of SwiftUI scene that lets you place content anywhere in the person’s surroundings. Applying the full style to the scene tells the system to hide passthrough video and display only your app’s content.": {"zh": "要创建完全沉浸式的体验，请打开一个 [ImmersiveSpace](https://developer.apple.com/documentation/SwiftUI/ImmersiveSpace) 并将其样式设置为 [全屏](https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/full)。沉浸式空间是一种 SwiftUI scene，允许你将内容放置在个体周围的任何地方。将 [全屏](https://developer.apple.com/documentation/SwiftUI/ImmersionStyle/full) 样式应用于场景会告知系统隐藏摄像头捕捉到的实时视频，并仅显示你应用程序的内容。", "tips": ""}, "Declare spaces in the body property of your app object, or anywhere you manage SwiftUI scenes. The following example shows an app with a main window and a fully immersive space. At launch time, the app displays the window.": {"zh": "在你的应用程序对象的 [body](https://developer.apple.com/documentation/SwiftUI/App/body-swift.property) 属性中声明空间，或者在你管理 SwiftUI scenes 的任何地方声明。以下示例显示了一个具有主窗口和一个完全沉浸式空间的应用程序。在启动时，应用程序显示主窗口。", "tips": ""}, "To display an ImmersiveSpace, open it using the openImmersiveSpace action, which you obtain from the SwiftUI environment. This action runs asynchronously and uses the provided information to find and initialize your scene. The following example shows a button that opens the space with the solarSystem identifier:": {"zh": "要显示 [ImmersiveSpace](https://developer.apple.com/documentation/SwiftUI/ImmersiveSpace)，请使用从 SwiftUI 环境获取的 [openImmersiveSpace](https://developer.apple.com/documentation/SwiftUI/EnvironmentValues/openImmersiveSpace) 方法。此操作以异步方式运行，并使用提供的信息查找并初始化你的 scene。下面的示例显示一个按钮，该按钮使用 solarSystem 标识符打开空间：", "tips": ""}, "An app can display only one space at a time, and it’s an error for you to try to open a space while another space is visible. To dismiss an open space, use the dismissImmersiveSpace action.": {"zh": "一个应用同时只能显示一个空间，如果你尝试在存在另一个空间时打开一个新空间，将会报错。要关闭已打开的空间，请使用 [dismissImmersiveSpace](https://developer.apple.com/documentation/SwiftUI/EnvironmentValues/dismissImmersiveSpace) 方法。", "tips": ""}, "For more information about displaying spaces, see the ImmersiveSpace type.": {"zh": "有关显示空间的更多信息，请参阅 [ImmersiveSpace](https://developer.apple.com/documentation/SwiftUI/ImmersiveSpace) 类型。", "tips": ""}, "Draw your content using RealityKit": {"zh": "使用 RealityKit 绘制你的内容", "tips": ""}, "RealityKit works well when your content consists of primitive shapes or existing content in USD files. Organize the contents of your scene using RealityKit entities, and animate that content using components and systems. Use Reality Composer Pro to assemble your content visually, and to attach dynamic shaders, animations, audio, and other behaviors to your content. Display the contents of your RealityKit scene in a RealityView in your scene.": {"zh": "当你的内容由基本形状或存在于 USD 文件中的内容组成的时，RealityKit 效果很好。使用 RealityKit entities 来管理应用里 scene 的内容，并使用组件和系统对该内容做动画效果。使用 Reality Composer Pro 在视觉上组织你的内容，并在你的内容上添加动态着色器、动画、音频和其他操作。在你的 scene 中使用 [RealityView](https://developer.apple.com/documentation/RealityKit/RealityView) 来显示 RealityKit 场景的内容。", "tips": ""}, "To load a Reality Composer Pro scene at runtime, fetch the URL of your Reality Composer Pro package file, and load the root entity of your scene. The following example shows how to create the entity for a package located in the app’s bundle:": {"zh": "要在运行时加载 Reality Composer Pro scene，请获取 Reality Composer Pro 包文件的 URL，并加载 scene 的根实体。以下示例显示如何为应用程序中的包创建实体：", "tips": ""}, "For more information about how to display content in a RealityView and manage interactions with your content, see Adding 3D content to your app.": {"zh": "有关如何在 [RealityView](https://developer.apple.com/documentation/RealityKit/RealityView) 中显示内容并管理与内容的交互的更多信息，请参阅 [向你的应用添加 3D 内容](https://developer.apple.com/documentation/visionos/adding-3d-content-to-your-app)。", "tips": ""}, "Draw your content using Metal": {"zh": "使用 Metal 绘制你的内容", "tips": ""}, "Another option for creating fully immersive scenes is to draw everything yourself using Metal. When using Metal to draw your content, use the Compositor Services framework to place that content onscreen. Compositor Services provides the code you need to set up your Metal rendering engine and start drawing.": {"zh": "另一种创建完全沉浸式场景的选项是使用 Metal 自己绘制所有内容。在用 Metal 绘制内容时，使用 Compositor Services 框架将该内容放置在屏幕上。Compositor Services 为你提供了设置 Metal 渲染引擎并开始绘制的代码。", "tips": ""}, "For details on how to render content using Metal and Compositor Services, and manage interactions with your content, see Drawing fully immersive content using Metal.": {"zh": "有关如何使用 Metal 和 Compositor Services 渲染内容以及管理与内容交互的详细信息，请参阅 [使用 Metal 绘制完全沉浸式内容](https://developer.apple.com/documentation/compositorservices/drawing_fully_immersive_content_using_metal)。", "tips": ""}}
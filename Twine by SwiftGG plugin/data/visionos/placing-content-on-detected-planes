{"Placing content on detected planes": {"zh": "在检测到的平面上放置内容", "tips": ""}, "Detect horizontal surfaces like tables and floors, as well as vertical planes like walls and doors.": {"zh": "检测水平平面（如桌子和地板）以及垂直平面（如墙壁和门）。", "tips": ""}, "Overview": {"zh": "概述", "tips": ""}, "Flat surfaces are an ideal place to position content in an app that uses a Full Space in visionOS. They provide a place for virtual 3D content to live alongside a person’s surroundings. Use plane detection in ARKit to detect these kinds of surfaces and filter the available planes based on criteria your app might need, such as the size of the plane, its proximity to someone, or a required plane orientation.": {"zh": "平面是在 visionOS 上使用“完整空间”的应用中放置内容的理想场所。它们为虚拟 3D 内容提供了与用户周围环境共存的场所。使用 ARKit 中的平面检测功能可检测到这类表面，并根据你的应用可能需要的条件（如平面大小、与用户的距离或所需的平面方向）过滤可用的平面。", "tips": ""}, "Use RealityKit anchor entities for basic plane anchoring": {"zh": "使用 RealityKit 锚点实体进行基本的平面锚定", "tips": ""}, "If you don’t need a specific plane in your app and you’re rendering your app’s 3D content in RealityKit, you can use an AnchorEntity instead. This approach lets you attach 3D content to a plane without prompting the person for world-sensing permission and without any particular knowledge of where that plane is relative to the person.": {"zh": "如果你的应用不需要特定的平面，而且你在使用 RealityKit 渲染应用的 3D 内容，那么你可以使用锚点实体（AnchorEntity）作为代替。这种方法可以让你将 3D 内容添加到一个平面上，且无需提示用户获得世界感知权限，也无需去了解该平面相对于用户的位置。", "tips": ""}, "The following shows an anchor that you can use to attach entities to a table:": {"zh": "下代码显示了一个锚点，你可以用它将实体添加到桌子上：", "tips": ""}, "Anchor entities don’t let you choose a specific plane in a person’s surroundings, but rather let you ask for a plane with certain characteristics. When you need more specific plane selection or real-time information about the plane’s position and orientation in the world, use ARKitSession and PlaneDetectionProvider.": {"zh": "锚点实体不允许你选择人物周围环境中的特定平面，而是允许你请求具有某些特征的平面。当你需要选择更具体的平面或有关平面在世界中位置和方向的实时信息时，请使用 ARKitSession 和 PlaneDetectionProvider。", "tips": ""}, "Configure an ARKit session for plane detection": {"zh": "为平面检测配置 ARKit 会话", "tips": ""}, "Plane-detection information comes from an ARKitSession that’s configured to use a PlaneDetectionProvider. You can choose to detect horizontal planes, vertical planes, or both. Each plane that ARKit detects comes with a classification, like PlaneAnchor.Classification.table or PlaneAnchor.Classification.floor. You can use these classifications to further refine which kinds of planes your app uses to present content. Plane detection requires ARKitSession.AuthorizationType.worldSensing authorization.": {"zh": "平面检测信息来自配置了 PlaneDetectionProvider 的 ARKitSession。你可以选择检测水平或垂直平面或两者。ARKit 检测到的每个平面都有一个分类，如 PlaneAnchor.Classification.table 或 PlaneAnchor.Classification.floor。你可以使用这些分类来进一步选择用哪类平面来应用中呈现内容。平面检测需要 ARKitSession.AuthorizationType.worldSensing 授权。", "tips": ""}, "The following starts a session that detects both horizontal and vertical planes, but filters out planes classified as windows:": {"zh": "下面代码启动的会话可检测水平和垂直平面，但会过滤掉被归类为窗口的平面：", "tips": ""}, "Create and update entities associated with each plane": {"zh": "创建并更新与平面关联的实体", "tips": ""}, "If you’re displaying content that needs to appear attached to a particular plane, update your content whenever you receive new information from ARKit. When a plane is no longer available in the person’s surroundings, ARKit sends a removal event. Respond to these events by removing content associated with the plane.": {"zh": "如果你在显示需要绑定至特定平面的内容，请在收到来自 ARKit 的新信息时更新这些内容。当用户周围环境中的某个平面不再可用时，ARKit 会发送移除事件。请通过移除与平面相关的内容来响应移除事件。", "tips": ""}, "The following shows plane updates that place a text entity on each plane in a person’s surroundings; the text entity displays the kind of plane ARKit detected:": {"zh": "下面代码展示了更新平面过程：向用户周围的每个平面上放置文本实体；文本实体显示的是 ARKit 检测到的平面类型：", "tips": ""}}
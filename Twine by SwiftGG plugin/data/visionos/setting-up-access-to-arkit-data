{"Setting up access to ARKit data": {"zh": "", "tips": ""}, "Check whether your app can use ARKit and respect people’s privacy.": {"zh": "", "tips": ""}, "Overview": {"zh": "", "tips": ""}, "In visionOS, ARKit can enable new kinds of experiences that leverage data such as hand tracking and world sensing. The system gates access to this kind of sensitive information. Because people can decline your app’s request to use ARKit data or revoke access later, you need to provide alternative ways to use your app and to handle cases where your app loses access to data.": {"zh": "", "tips": ""}, "Add usage descriptions for ARKit data access": {"zh": "", "tips": ""}, "People need to know why your app wants to access data from ARKit. Add the following keys to your app’s information property list to provide a user-facing usage description that explains how your app uses the data:": {"zh": "", "tips": ""}, "Use this key if your app uses hand tracking.": {"zh": "", "tips": ""}, "Use this key if your app uses image tracking, plane detection, or scene reconstruction.": {"zh": "", "tips": ""}, "Note": {"zh": "", "tips": ""}, "World tracking — unlike world sensing — doesn’t require authorization. For more information, see Tracking specific points in world space.": {"zh": "", "tips": ""}, "Choose between up-front or as-needed authorization": {"zh": "", "tips": ""}, "You can choose when someone sees an authorization request to use ARKit data. If you need precise control over when the request appears, call the requestAuthorization(for:) method on ARKitSession to explicitly authorize access at the time you call it. Otherwise, people see an authorization request when you call the run(_:) method. This is an implicit authorization because the timing of the request depends entirely on when you start the session.": {"zh": "", "tips": ""}, "Open a space and run a session": {"zh": "", "tips": ""}, "To help protect people’s privacy, ARKit data is available only when your app presents a Full Space and other apps are hidden. Present one of these space styles before calling the run(_:) method.": {"zh": "", "tips": ""}, "The following shows an app structure that’s set up to use a space with ARKit:": {"zh": "", "tips": ""}, "Call openImmersiveSpace from your app’s user interface to create a space, start running an ARKit session, and kick off an immersive experience. The following shows a simple view with a button that opens the space:": {"zh": "", "tips": ""}, "Provide alternatives for declined and revoked authorizations": {"zh": "", "tips": ""}, "Someone might not want to give your app access to data from ARKit, or they might choose to revoke that access later in Settings. Handle these situations gracefully, and remove or transition content that depends on ARKit data. For example, you might fade out content that you need to remove, or recenter content to an appropriate starting position. If your app uses ARKit data to place content in a person’s surroundings, consider letting people place content using the system-provided interface.": {"zh": "", "tips": ""}, "Providing alternatives is especially important if you’re using ARKit for user input. People using accessibility features, trackpads, keyboards, or other forms of input might need a way to use your app without ARKit.": {"zh": "", "tips": ""}}